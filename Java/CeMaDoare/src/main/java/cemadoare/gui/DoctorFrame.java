/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cemadoare.gui;

import cemadoare.dao.PatientDao;
import cemadoare.dao.impl.PatientDaoImpl;
import cemadoare.model.Diagnosis;
import cemadoare.model.Patient;
import javafx.scene.input.DataFormat;
import org.apache.log4j.Logger;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.*;

/**
 *
 * @author Filip
 */
public class DoctorFrame extends javax.swing.JFrame {

    /**
     * Creates new form User
     */
    public DoctorFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = new javax.swing.JPanel();
        leftPanel = new javax.swing.JPanel();
        welcomePanel = new javax.swing.JPanel();
        welcomeLabel = new javax.swing.JLabel();
        menuPanel = new javax.swing.JPanel();
        addPatientButton = new javax.swing.JButton();
        showPatientsButton = new javax.swing.JButton();
        deletePatientButton = new javax.swing.JButton();
        updatePatientButton = new javax.swing.JButton();
        patientScrollPane = new javax.swing.JScrollPane();
        patientTable = new javax.swing.JTable();
        logOutButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("InimaSanatoasa");
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(670, 500));
        setSize(new java.awt.Dimension(670, 500));

        backgroundPanel.setBackground(new java.awt.Color(51, 51, 51));
        backgroundPanel.setPreferredSize(new java.awt.Dimension(600, 500));
        backgroundPanel.setVerifyInputWhenFocusTarget(false);
        backgroundPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        leftPanel.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 380, Short.MAX_VALUE)
        );

        backgroundPanel.add(leftPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 60, 380));

        welcomePanel.setBackground(new java.awt.Color(255, 255, 255));

        welcomeLabel.setBackground(new java.awt.Color(0, 0, 0));
        welcomeLabel.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        welcomeLabel.setText("Bine ati revenit domnule doctor Mihai Ionescu");

        menuPanel.setBackground(new java.awt.Color(252, 250, 215));

        addPatientButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8-add-user-male-32.png"))); // NOI18N
        addPatientButton.setText("Adauga pacient");
        addPatientButton.setBorderPainted(false);
        addPatientButton.setContentAreaFilled(false);
        addPatientButton.setIconTextGap(2);
        addPatientButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        addPatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPatientButtonActionPerformed(evt);
            }
        });

        showPatientsButton.setBackground(new java.awt.Color(255, 255, 255));
        showPatientsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8-user-account-32.png"))); // NOI18N
        showPatientsButton.setText("Pacientii mei");
        showPatientsButton.setBorder(null);
        showPatientsButton.setBorderPainted(false);
        showPatientsButton.setContentAreaFilled(false);
        showPatientsButton.setIconTextGap(2);
        showPatientsButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        showPatientsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPatientsButtonActionPerformed(evt);
            }
        });

        deletePatientButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8-denied-32.png"))); // NOI18N
        deletePatientButton.setText("Stege pacient");
        deletePatientButton.setAlignmentY(0.0F);
        deletePatientButton.setBorderPainted(false);
        deletePatientButton.setContentAreaFilled(false);
        deletePatientButton.setIconTextGap(2);
        deletePatientButton.setInheritsPopupMenu(true);
        deletePatientButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        deletePatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePatientButtonActionPerformed(evt);
            }
        });

        updatePatientButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8-user-menu-male-32.png"))); // NOI18N
        updatePatientButton.setText("Modifica pacient");
        updatePatientButton.setBorderPainted(false);
        updatePatientButton.setContentAreaFilled(false);
        updatePatientButton.setIconTextGap(2);
        updatePatientButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        updatePatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePatientButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(showPatientsButton, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(addPatientButton)
                .addGap(18, 18, 18)
                .addComponent(deletePatientButton)
                .addGap(18, 18, 18)
                .addComponent(updatePatientButton)
                .addGap(71, 71, 71))
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(deletePatientButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(updatePatientButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(showPatientsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addPatientButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout welcomePanelLayout = new javax.swing.GroupLayout(welcomePanel);
        welcomePanel.setLayout(welcomePanelLayout);
        welcomePanelLayout.setHorizontalGroup(
            welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(welcomeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, welcomePanelLayout.createSequentialGroup()
                .addGap(0, 58, Short.MAX_VALUE)
                .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        welcomePanelLayout.setVerticalGroup(
            welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(welcomeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        backgroundPanel.add(welcomePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 640, 90));

        patientTable.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N
        patientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Prenume 1", "Prenume 2", "Nume", "Data nasterii", "Stare de sanatate"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        patientScrollPane.setViewportView(patientTable);

        backgroundPanel.add(patientScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 140, 580, 360));

        logOutButton.setForeground(new java.awt.Color(187, 22, 237));
        logOutButton.setText("Log out");
        logOutButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        logOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButtonActionPerformed(evt);
            }
        });
        backgroundPanel.add(logOutButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 90, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(backgroundPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButtonActionPerformed
        setVisible(false);
        new LoginFrame().setVisible(true);
        LOGGER.info("User has been successfully logged off");
    }//GEN-LAST:event_logOutButtonActionPerformed

    private void updatePatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePatientButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) patientTable.getModel();
        Patient selected = getSelectedPatient(model);

        AddPatientFrame addPatientFrame = new AddPatientFrame(selected);
        addPatientFrame.setVisible(true);
        addPatientFrame.addWindowListener(new AddPatientPopUpFrameWindowListener());
    }//GEN-LAST:event_updatePatientButtonActionPerformed

    private Patient getSelectedPatient(DefaultTableModel model) {
        Vector selectedRowData = (Vector) model.getDataVector().elementAt(patientTable.getSelectedRow());
        if (selectedRowData != null || !selectedRowData.isEmpty()) {
            Date birthDay = new Date();
            try {
                birthDay = new SimpleDateFormat("dd/MM/yyyy").parse((String)selectedRowData.get(3));
            } catch (ParseException e) {
                e.printStackTrace();
            }

            return new Patient.Builder()
                    .withFirstName((String)selectedRowData.get(0))
                    .withSecondName((String)selectedRowData.get(1))
                    .withLastName((String)selectedRowData.get(2))
                    .withBirthDay(birthDay)
                    .build();
        } else {
            LOGGER.warn("No patient selected");
            return new Patient();
        }
    }

    private void deletePatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePatientButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) patientTable.getModel();
        Patient selected = getSelectedPatient(model);
        patientDao.deletePatient(selected);
        LOGGER.info("Deleted patient " + selected);
        fillTable();
        
    }//GEN-LAST:event_deletePatientButtonActionPerformed

    private void addPatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPatientButtonActionPerformed
        JFrame addPatientPopUpFrame = new AddPatientFrame(null);
        addPatientPopUpFrame.setVisible(true);
        addPatientPopUpFrame.addWindowListener(new AddPatientPopUpFrameWindowListener());
    }//GEN-LAST:event_addPatientButtonActionPerformed

    private void showPatientsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPatientsButtonActionPerformed
        fillTable();
        LOGGER.info("showPatientsButtonActionPerformed() was called");
    }//GEN-LAST:event_showPatientsButtonActionPerformed

    private void fillTable() {
        while(patientTable.getRowCount() > 0) {
            ((DefaultTableModel)patientTable.getModel()).removeRow(0);
        }

        int nrOfColumns = TABLE_NR_OF_COLUMNS;
        for (Patient patient : patientDao.getAllPatients()) {
            Object [] row = new Object[nrOfColumns];
            row[0] = patient.getFirstName();
            row[1] = patient.getSecondName();
            row[2] = patient.getLastName();
            row[3] = new SimpleDateFormat("dd/MM/yyyy").format(patient.getBirthDay());
            List<Diagnosis> diagnoses = patient.getDiagnoses();
            Collections.sort(diagnoses, Comparator.comparing(Diagnosis::getConsultDate));
            // TODO Check if it sort ascending
            row[4] = diagnoses.isEmpty() ? Diagnosis.Result.NECUNOSCUT : diagnoses.get(0).getResult();

            DefaultTableModel model = (DefaultTableModel) patientTable.getModel();
            model.addRow(row);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DoctorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DoctorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DoctorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DoctorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DoctorFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPatientButton;
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JButton deletePatientButton;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JButton logOutButton;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JScrollPane patientScrollPane;
    private javax.swing.JTable patientTable;
    private javax.swing.JButton showPatientsButton;
    private javax.swing.JButton updatePatientButton;
    private javax.swing.JLabel welcomeLabel;
    private javax.swing.JPanel welcomePanel;
    // End of variables declaration//GEN-END:variables

    private final static Logger LOGGER = Logger.getLogger(DoctorFrame.class);
    private static final int TABLE_NR_OF_COLUMNS = 6;

    private PatientDao patientDao = new PatientDaoImpl();

    private class AddPatientPopUpFrameWindowListener implements WindowListener {
        @Override
        public void windowOpened(WindowEvent e) {

        }

        @Override
        public void windowClosing(WindowEvent e) {

        }

        @Override
        public void windowClosed(WindowEvent e) {
            fillTable();
        }

        @Override
        public void windowIconified(WindowEvent e) {

        }

        @Override
        public void windowDeiconified(WindowEvent e) {

        }

        @Override
        public void windowActivated(WindowEvent e) {

        }

        @Override
        public void windowDeactivated(WindowEvent e) {

        }
    }
}
