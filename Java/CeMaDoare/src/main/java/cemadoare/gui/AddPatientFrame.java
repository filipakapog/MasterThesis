/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cemadoare.gui;

import cemadoare.classifer.ClassifierIntegrator;
import cemadoare.classifer.DataSetType;
import cemadoare.classifer.impl.MatlablClassifierIntegrator;
import cemadoare.dao.PatientDao;
import cemadoare.dao.impl.PatientDaoImpl;
import cemadoare.model.Patient;
import cemadoare.service.FileSaver;
import cemadoare.util.Constants;
import org.apache.log4j.Logger;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * @author Filip
 */
public class AddPatientFrame extends javax.swing.JFrame {

    public AddPatientFrame(Patient patient) {
        initComponents();
        doTheNeedful(patient);
    }

    private void doTheNeedful(Patient patient) {
        this.oldOne = patient;
        if (null != patient) {
            firstNameTxt.setText(patient.getFirstName());
            secondNameTxt.setText(patient.getSecondName());
            lastNameTxt.setText(patient.getLastName());
            birthDayTxt.setText(new SimpleDateFormat("dd/MM/yyyy").format(patient.getBirthDay()));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dataSetType = new javax.swing.ButtonGroup();
        firstNameTxt = new javax.swing.JTextField();
        secondNameTxt = new javax.swing.JTextField();
        birthDayTxt = new javax.swing.JTextField();
        lastNameTxt = new javax.swing.JTextField();
        firstNameLabel = new javax.swing.JLabel();
        secondNameLabel = new javax.swing.JLabel();
        lastNameLabel = new javax.swing.JLabel();
        birthDayLabel = new javax.swing.JLabel();
        insertPatient = new javax.swing.JButton();
        uploadDiagnosisiFileButton = new javax.swing.JButton();
        stenosisRadioButton = new javax.swing.JRadioButton();
        arrhythmiaRadioButton = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        firstNameTxt.setText("Eu");

        secondNameTxt.setText("Eu2");

        birthDayTxt.setText("10/10/1890");

        lastNameTxt.setText("Eu3");

        firstNameLabel.setText("Prenume 1");

        secondNameLabel.setText("Prenume 2");

        lastNameLabel.setText("Nume");

        birthDayLabel.setText("Data Nasterii");

        insertPatient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8-plus-32.png"))); // NOI18N
        insertPatient.setText("Adauga");
        insertPatient.setBorderPainted(false);
        insertPatient.setContentAreaFilled(false);
        insertPatient.setIconTextGap(2);
        insertPatient.setMargin(new java.awt.Insets(0, 0, 0, 0));
        insertPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertPatientActionPerformed(evt);
            }
        });

        uploadDiagnosisiFileButton.setText("Incarca diagnostic");
        uploadDiagnosisiFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadDiagnosisiFileButtonActionPerformed(evt);
            }
        });

        dataSetType.add(stenosisRadioButton);
        stenosisRadioButton.setText("Stenoza");

        dataSetType.add(arrhythmiaRadioButton);
        arrhythmiaRadioButton.setText("Aritmie");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(firstNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(secondNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lastNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(firstNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(secondNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lastNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(uploadDiagnosisiFileButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(stenosisRadioButton)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(birthDayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(birthDayTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(insertPatient))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(arrhythmiaRadioButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameLabel)
                    .addComponent(secondNameLabel)
                    .addComponent(lastNameLabel)
                    .addComponent(birthDayLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(secondNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(birthDayTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(insertPatient))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stenosisRadioButton)
                    .addComponent(arrhythmiaRadioButton)
                    .addComponent(uploadDiagnosisiFileButton))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insertPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertPatientActionPerformed
        Date birthDay = null;
        try {
            birthDay = new SimpleDateFormat("dd/MM/yyyy").parse(birthDayTxt.getText());
        } catch (ParseException e) {
            e.printStackTrace();
        }

        Patient newOne = new Patient.Builder()
                .withFirstName(firstNameTxt.getText())
                .withSecondName(secondNameTxt.getText())
                .withLastName(lastNameTxt.getText())
                .withBirthDay(birthDay)
                .build();

        if (null == oldOne) {
            patientDao.addPatient(newOne);
            LOGGER.info("Added new patient: " + newOne);
        } else {
            patientDao.updatePatient(newOne);
            LOGGER.info("Updated patient from: " + oldOne + "to " + newOne);
        }

        // Doing the classification
        if (arrhythmiaRadioButton.isSelected()) {
            classifier.classify(DataSetType.ARRYTHMIA);
        } else if (stenosisRadioButton.isSelected()){
            classifier.classify(DataSetType.STENOSIS);
        } else {
//            classifier.classify(DataSetType.NONE);
        }

        this.dispose();
    }//GEN-LAST:event_insertPatientActionPerformed

    private void uploadDiagnosisiFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadDiagnosisiFileButtonActionPerformed
        String matlabTestDataPath = Constants.PATHS.MATLAB_TEST_DATA.getPath();
        FileSaver fileSaver = new FileSaver(this);
  
        fileSaver.saveFileTo(matlabTestDataPath);
        LOGGER.info("File saved to " + matlabTestDataPath);
    }//GEN-LAST:event_uploadDiagnosisiFileButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddPatientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddPatientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddPatientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddPatientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddPatientFrame(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton arrhythmiaRadioButton;
    private javax.swing.JLabel birthDayLabel;
    private javax.swing.JTextField birthDayTxt;
    private javax.swing.ButtonGroup dataSetType;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JTextField firstNameTxt;
    private javax.swing.JButton insertPatient;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField lastNameTxt;
    private javax.swing.JLabel secondNameLabel;
    private javax.swing.JTextField secondNameTxt;
    private javax.swing.JRadioButton stenosisRadioButton;
    private javax.swing.JButton uploadDiagnosisiFileButton;
    // End of variables declaration//GEN-END:variables
    private final static Logger LOGGER = Logger.getLogger(AddPatientFrame.class);

    private ClassifierIntegrator classifier = MatlablClassifierIntegrator.getInstance();
    private PatientDao patientDao = new PatientDaoImpl();
    private Patient oldOne;
}
